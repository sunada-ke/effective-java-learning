package chapter22;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

/**
 * 非 static のメンバクラスより、static のメンバクラスを選ぶ
 */
public final class Main {

	public static void main(String[] args) {
		// ネストしたクラスは以下の 4 種類。
		// static のメンバークラス、非 static のメンバークラス、無名クラス、ローカルクラス。

		// static のメンバークラスは最も単純なネストしたクラス。
		// 外部クラスのメンバー変数が private で宣言されていてもアクセスできる。
		// static メンバークラスが private で宣言されていたら、外部クラスからのみアクセス可能。
		// 一般的な使用方法の 1 つは、外部クラスと一緒に使用すると有用な public のヘルパークラスとして利用できる点。
		Calculator.Operation plus = Calculator.Operation.PLUS;
		System.out.println(plus.apply(3.0, 5.0));

		// 非 static のメンバクラスは外部クラスのインスタンスを参照するため、
		// 外部クラスのメソッドを呼び出すことが可能。
		// 外部クラスのインスタンスを持つ必要がない場合、必ず static 修飾子を付けること。
		// static 修飾子を省略すると、個々のインスタンスは関係のない外部クラスのインスタンスの参照を持ち続けてしまい、
		// GC でメモリ上からオブジェクトが破棄されず、外部クラスのインスタンスがメモリ上に残り続けてしまう可能性がある。
		// (http://blog.kengo-toda.jp/entry/20091112/1258033092)
		// 非 static メンバークラスの一般的な使用方法の 1 つは、外部クラスのインスタンスを関係のないクラスのインスタンスとして、
		// 見なすことを可能にする
		// (非 static メンバークラスのインスタンスを外部クラスのインスタンスのように提供する)
		// アダプターを定義すること。

		// map.keySet() は 非 static メンバークラスの KeySet インスタンスを返却している。
		Map<String, String> map = new HashMap<>();
		Set<String> set = map.keySet();

		// 無名クラスは外部クラスのメンバーではない。他のメンバーと一緒に宣言されるのではなく、
		// 無名クラスは使用される時点で同時にインスタンス化される。
		// 無名クラスを使用する場合、無名クラスが継承しているスーパークラスのメソッドしか呼び出せない。
		// 無名クラスのインスタンスを生成する場合、new 式はスーパークラスおよびインターフェイスの名前になっているはず。
		// 無名クラスは式の途中に書かれるため、大変短くあるべきであり、10 行以下であるべき。
		// そうでなければ、プログラムが読みにくくなる。
		// 無名クラスの一般的な使用方法の 1 つは、関数オブジェクトを使用すること。
		// 例えば、Comparator.sort() の呼び出しは、無名 Comparator インスタンスを使用する。

		// ローカルクラスは使うことはほぼないため、省略。
	}

}
